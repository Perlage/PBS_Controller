<VisualMicro>
  <Program Name="PBS_Controller" Ext=".ino" Location="C:\Users\Wallace\Dropbox\PBS_MAIN\PBS_controller\_VERSIONS\_CURRENT\PBS_Controller">
    <Compile ReCompileIfSourceIsNewer="1" IsDebugStart="1" CompilerErrors="0" ConfigurationName="Debug" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro" SketchName="PBS_Controller" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 100;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_USB;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino16x" Package="arduino" Platform="avr" Architecture="avr">
      <Board Name="micro" Description="Arduino Micro" CoreFolder="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" VariantFullPath="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\micro" McuIdePath="C:\Program Files (x86)\Arduino" McuSketchBookPath="C:\Users\Wallace\Documents\Arduino" name="Arduino Micro" upload.tool="avrdude" upload.protocol="avr109" upload.maximum_size="28672" upload.maximum_data_size="2560" upload.speed="57600" upload.disable_flushing="true" upload.use_1200bps_touch="true" upload.wait_for_upload_port="true" bootloader.tool="avrdude" bootloader.low_fuses="0xff" bootloader.high_fuses="0xd8" bootloader.extended_fuses="0xcb" bootloader.file="caterina/Caterina-Micro.hex" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x2F" build.mcu="atmega32u4" build.f_cpu="16000000L" build.vid="0x2341" build.pid="0x8037" build.usb_product="&quot;Arduino Micro&quot;" build.board="AVR_MICRO" build.core="arduino" build.variant="micro" build.extra_flags="{build.usb_flags}" runtime.ide.path="C:\Program Files (x86)\Arduino" build.system.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\system" runtime.ide.version="10600" target_package="arduino" target_platform="avr" runtime.hardware.path="C:\Program Files (x86)\Arduino\hardware\arduino" originalid="micro" intellisense.tools.path="{runtime.tools.avr-gcc.path}/" intellisense.include.paths="{intellisense.tools.path}avr/include/;{intellisense.tools.path}/avr/include/avr/;{intellisense.tools.path}lib\gcc\avr\4.8.1\include" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.erase.params.verbose="-v" tools.atprogram.erase.params.quiet="-q" tools.atprogram.bootloader.params.verbose="-v" tools.atprogram.bootloader.params.quiet="-q" tools.atprogram.bootloader.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {bootloader.verbose}  program -c -f &quot;{runtime.ide.path}/hardware/arduino/avr/bootloaders/{bootloader.file}&quot;" version="1.6.0" compiler.path="{runtime.ide.path}/hardware/tools/avr/bin/" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os -w -ffunction-sections -fdata-sections -MMD" compiler.c.elf.flags="-w -Os -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -x assembler-with-cpp" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os -w -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD" compiler.ar.cmd="avr-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.size.cmd="avr-size" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{build.path}/{archive_file}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*" recipe.size.regex.eeprom="^(?:\.eeprom)\s+([0-9]+).*" tools.avrdude.cmd.path="{runtime.ide.path}/hardware/tools/avr/bin/avrdude" tools.avrdude.config.path="{runtime.ide.path}/hardware/tools/avr/etc/avrdude.conf" tools.avrdude.upload.params.verbose="-v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" build.usb_manufacturer="" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" vm.platform.root.path="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\rdnmo42p.yv5\Micro Platforms\arduino16x" avrisp.name="AVR ISP" avrisp.communication="serial" avrisp.protocol="stk500v1" avrisp.program.protocol="stk500v1" avrisp.program.tool="avrdude" avrisp.program.extra_params="-P{serial.port}" avrispmkii.name="AVRISP mkII" avrispmkii.communication="usb" avrispmkii.protocol="stk500v2" avrispmkii.program.protocol="stk500v2" avrispmkii.program.tool="avrdude" avrispmkii.program.extra_params="-Pusb" usbtinyisp.name="USBtinyISP" usbtinyisp.protocol="usbtiny" usbtinyisp.program.tool="avrdude" usbtinyisp.program.extra_params="" arduinoisp.name="ArduinoISP" arduinoisp.protocol="arduinoisp" arduinoisp.program.tool="avrdude" arduinoisp.program.extra_params="" usbasp.name="USBasp" usbasp.communication="usb" usbasp.protocol="usbasp" usbasp.program.protocol="usbasp" usbasp.program.tool="avrdude" usbasp.program.extra_params="-Pusb" parallel.name="Parallel Programmer" parallel.protocol="dapa" parallel.force="true" parallel.program.tool="avrdude" parallel.program.extra_params="-F" arduinoasisp.name="Arduino as ISP" arduinoasisp.communication="serial" arduinoasisp.protocol="stk500v1" arduinoasisp.speed="19200" arduinoasisp.program.protocol="stk500v1" arduinoasisp.program.speed="19200" arduinoasisp.program.tool="avrdude" arduinoasisp.program.extra_params="-P{serial.port} -b{program.speed}" ide.hint="For use with Arduino.cc 1.6.2+ ide" ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.6.7" ide.default.version="10607" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.exe_name="arduino" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference\arduino.cc\en\Reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" ide.appid="arduino16x" location.sketchbook="C:\Users\Wallace\Documents\Arduino" build.core.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" build.core.parentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores" build.core.coresparentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr" vm.core.include="arduino.h" vm.boardsource.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr" runtime.platform.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr" vm.platformname.name="avr" build.arch="AVR" build.variant.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\micro" build.architecture="avr" vmresolved.compiler.path="C:\Program Files (x86)\Arduino\hardware\tools\avr\bin\" vmresolved.tools.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" vm.runtime.compiler.showwarnings="false" vm.runtime.compiler.auto_discover_includes="true" vm.last.buildpath="C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro" vm.build.verbose_build_properties="false" build.source.path="C:\Users\Wallace\Dropbox\PBS_MAIN\PBS_controller\_VERSIONS\_CURRENT\PBS_Controller\PBS_Controller.ino" build.path="C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro" PreProcessor.HeaderCount="1" PreProcessor.PrototypeCount="5" vm.last.preproc.file.0.file="PBS_Controller.ino" vm.last.preproc.file.0.offset="1" vm.last.preproc.file.0.length="21524" vm.last.preproc.file.0.linecount="1140" vm.last.preproc.file.0.linestart="0" vm.last.preproc.file.0.lineend="1140" vm.last.preproc.file.0.prefix_lines="0" serial.port.file="COM3" serial.port="COM3" serial.port.num="3" build.project_name="PBS_Controller.ino" runtime.vm.ide.platforms.path="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\rdnmo42p.yv5\Micro Platforms" build.variant.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\micro" build.core.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" archive_file="core.a" archive_file_path="C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\core.a" extra.time.local="84870819" vm_all_includes=" -I&quot;C:\Users\Wallace\Dropbox\PBS_MAIN\PBS_controller\_VERSIONS\_CURRENT\PBS_Controller&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\micro&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries\EEPROM&quot;  -I&quot;C:\Users\Wallace\Documents\Arduino\libraries\LiquidCrystal_I2C2004V1&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\rdnmo42p.yv5\Micro Platforms\default\debuggers\VM_DBG&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries\Wire&quot;  -I&quot;C:\Program Files (x86)\Arduino\libraries&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\rdnmo42p.yv5\Micro Platforms\default\debuggers&quot;  -I&quot;C:\Users\Wallace\Documents\Arduino\libraries&quot; " vm_core_includes=" -I&quot;C:\Users\Wallace\Dropbox\PBS_MAIN\PBS_controller\_VERSIONS\_CURRENT\PBS_Controller&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\micro&quot; " includes=" -I&quot;C:\Users\Wallace\Dropbox\PBS_MAIN\PBS_controller\_VERSIONS\_CURRENT\PBS_Controller&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\micro&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries\EEPROM&quot;  -I&quot;C:\Users\Wallace\Documents\Arduino\libraries\LiquidCrystal_I2C2004V1&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\rdnmo42p.yv5\Micro Platforms\default\debuggers\VM_DBG&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries\Wire&quot;  -I&quot;C:\Program Files (x86)\Arduino\libraries&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\rdnmo42p.yv5\Micro Platforms\default\debuggers&quot;  -I&quot;C:\Users\Wallace\Documents\Arduino\libraries&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries\Wire\utility&quot;" build.path_sketch="C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro" build.path_core="C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\core" build.path_libraries="C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro" object_file="C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\PBS_Controller.cpp.o" source_file="C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\PBS_Controller.cpp" object_files=" &quot;C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\EEPROM\EEPROM.cpp.o&quot;  &quot;C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\LiquidCrystal_I2C2004V1\LiquidCrystal_I2C.cpp.o&quot;  &quot;C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\VM_DBG\VM_mem_check.c.o&quot;  &quot;C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\VM_DBG\VM_DBG.cpp.o&quot;  &quot;C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\Wire\Wire.cpp.o&quot;  &quot;C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\Wire\utility\twi.c.o&quot;  &quot;C:\Users\Wallace\AppData\Local\V.Micro\Arduino\Builds\PBS_Controller\micro\PBS_Controller.cpp.o&quot; " />
    </Platform>
    <Debug EnableBreak="1" DebugEnabled="1" IsGdb="0" RemotePortSpeedWrittenToDebugSource="9600" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="Test.ino, line 11" Id="a3b054a6-dc6a-4908-8928-e7f7178b75a3" Enabled="0" Message="Hello World!!" MessageTextType="0" PreProcessedMessage="Hello World!!" Condition="Time = {millis()}" ConditionType="2" CurrentHits="0" File="c:\users\wallace\documents\arduino\test\test.ino" FileLine="11" FileColumn="1" FunctionName="loop()" FunctionLineOffset="3" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='a3b054a6-dc6a-4908-8928-e7f7178b75a3'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>4	  /* add setup code here */
5	
6	}
7	
8	void loop()
9	{
10	
--&gt;11	  /* add main program code here */
12	
13	}
</Source>
      </BreakPoint>
      <BreakPoint Index="2" Name="PBS_Controller.ino, line 675" Id="764ce05b-7e27-4123-8a8c-4ec421f416e6" Enabled="1" Message="Time {millis()} Entering Fill Loop: {cLiquidInitFill}" MessageTextType="0" PreProcessedMessage="Time {0} Entering Fill Loop: {1}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\wallace\dropbox\pbs_main\pbs_controller\_versions\_current\pbs_controller\pbs_controller.ino" FileLine="675" FileColumn="1" FunctionName="loop()" FunctionLineOffset="344" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='764ce05b-7e27-4123-8a8c-4ec421f416e6'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>668	  //========================================================================================
669	  // FILL LOOP
670	  //========================================================================================
671	
672	  // v1.1 Changed the pressureDeltaMax condition to reflect fact that there are two sensors
673		// v1.1 #96: Added button3 exit shortcut
674		
--&gt;675		cLiquidInitFill = analogRead(sensorFillPin2);
676				
677	  int startSolenoidCleaningCycle = millis(); // Get the start time for the solenoid cleaning cycle
678		while(button2State == LOW &amp;&amp; button3State == HIGH &amp;&amp; (sensorFillState == HIGH || inCleaningMode == true) &amp;&amp; switchDoorState == LOW &amp;&amp; (((P2 - offsetP2) - (P1 - offsetP1) &lt; pressureDeltaMax) || inCleaningMode == true)) 
679	  {     
680			
681		  //ANALOG SENSOR READING
682			cLiquid = analogRead(sensorFillPin2);
683			
684			lcd.setCursor (16, 2);
</Source>
        <MessageVariables>
          <MessageVariable Name="millis()" Index="1" />
          <MessageVariable Name="cLiquidInitFill" Index="2" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="3" Name="PBS_Controller.ino, line 682" Id="25733dc0-0417-49db-9b26-6032e1fefc71" Enabled="1" Message="Entering Fill Loop: {cLiquid}" MessageTextType="0" PreProcessedMessage="Entering Fill Loop: {0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\wallace\dropbox\pbs_main\pbs_controller\_versions\_current\pbs_controller\pbs_controller.ino" FileLine="682" FileColumn="1" FunctionName="loop()" FunctionLineOffset="351" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='25733dc0-0417-49db-9b26-6032e1fefc71'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>675		cLiquidInitFill = analogRead(sensorFillPin2);
676				
677	  int startSolenoidCleaningCycle = millis(); // Get the start time for the solenoid cleaning cycle
678		while(button2State == LOW &amp;&amp; button3State == HIGH &amp;&amp; (sensorFillState == HIGH || inCleaningMode == true) &amp;&amp; switchDoorState == LOW &amp;&amp; (((P2 - offsetP2) - (P1 - offsetP1) &lt; pressureDeltaMax) || inCleaningMode == true)) 
679	  {     
680			
681		  //ANALOG SENSOR READING
--&gt;682			cLiquid = analogRead(sensorFillPin2);
683			
684			lcd.setCursor (16, 2);
685			lcd.print (cLiquid);
686	
687			Serial.print("TimeFill = ");
688			Serial.print(millis());
689			Serial.print(": cLiquidFill = ");
690			Serial.print(cLiquid);
691			Serial.println();
</Source>
        <MessageVariables>
          <MessageVariable Name="cLiquid" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="4" Name="PBS_Controller.ino, line 866" Id="65ebc6c2-ce10-4290-9e81-5f1c9bcefdb6" Enabled="1" Message="Time {millis()} Entering Depress: {cLiquidInitDepres}" MessageTextType="0" PreProcessedMessage="Time {0} Entering Depress: {1}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\wallace\dropbox\pbs_main\pbs_controller\_versions\_current\pbs_controller\pbs_controller.ino" FileLine="866" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='65ebc6c2-ce10-4290-9e81-5f1c9bcefdb6'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>859		
860		pressureOutput(); //v1.1 Do we need to take a fresh reading here? Probably a good idea
861		float minPressureDiffSensorClear = 10; //v1.1. In psi
862		
863		int cLiquid1; //Variables for sensing foam on the basis of DIFFERENCES
864		int cLiquid2;
865		int cLiquidInit;
--&gt;866		cLiquidInitDepres = analogRead(sensorFillPin2);	
867		
868		Serial.print ("TimeIdle = ");
869		Serial.print (millis());
870		Serial.print (": cLiquidInitDepress = ");
871		Serial.print (cLiquidInitDepres);
872		Serial.println ();
873		
874		//85: Added condition (sensorFillState == LOW &amp;&amp; PSIdiff &lt; minPressureDiffSensorClear) to allow depressurization with sensor LOW
875	  while(button3State == LOW &amp;&amp; ((sensorFillState == HIGH  || (sensorFillState == LOW &amp;&amp; PSIdiff &lt; minPressureDiffSensorClear)) || !digitalRead(button1Pin) == LOW || inCleaningMode == true) &amp;&amp; switchDoorState == LOW &amp;&amp; (P1 - offsetP1 &gt;= pressureDeltaDown)) //v1.1 added sensor override
</Source>
        <MessageVariables>
          <MessageVariable Name="millis()" Index="1" />
          <MessageVariable Name="cLiquidInitDepres" Index="2" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="5" Name="PBS_Controller.ino, line 882" Id="ee5d6bbe-993c-448c-891b-f2ea6982d2d5" Enabled="1" Message="Time {millis()} In Depress: {cLiquid1}" MessageTextType="0" PreProcessedMessage="Time {0} In Depress: {1}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\wallace\dropbox\pbs_main\pbs_controller\_versions\_current\pbs_controller\pbs_controller.ino" FileLine="882" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='ee5d6bbe-993c-448c-891b-f2ea6982d2d5'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>875	  while(button3State == LOW &amp;&amp; ((sensorFillState == HIGH  || (sensorFillState == LOW &amp;&amp; PSIdiff &lt; minPressureDiffSensorClear)) || !digitalRead(button1Pin) == LOW || inCleaningMode == true) &amp;&amp; switchDoorState == LOW &amp;&amp; (P1 - offsetP1 &gt;= pressureDeltaDown)) //v1.1 added sensor override
876	  {  
877	    inDepressurizeLoop = true;
878	    relayOn(relay3Pin, true); //Open Gas Out solenoid
879			digitalWrite(light3Pin, HIGH);
880			
881			// New analog liquid sensor routine
--&gt;882			cLiquid1 = analogRead(sensorFillPin2);	
883			lcd.setCursor (16, 2);
884			lcd.print (cLiquid1);	
885			
886			Serial.print ("Time1 = ");
887			Serial.print (millis());
888			Serial.print (": cLiquid1 = ");
889			Serial.print (cLiquid1);
890			Serial.println ();	
891					
</Source>
        <MessageVariables>
          <MessageVariable Name="millis()" Index="1" />
          <MessageVariable Name="cLiquid1" Index="2" />
        </MessageVariables>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>